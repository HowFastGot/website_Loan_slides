/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/modules/VideoPlayer.js":
/*!***************************************!*\
  !*** ./src/js/modules/VideoPlayer.js ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ VideoPlayer)
/* harmony export */ });
class VideoPlayer {
  constructor(btns, block, close) {
    this.btns = document.querySelectorAll(btns);
    this.block = document.querySelector(block);
    this.close = document.querySelector(close);
    this.onPlayerStateChange = this.onPlayerStateChange.bind(this);
  }

  createPlayer(url) {
    this.frame = new YT.Player('frame', {
      height: '100%',
      width: '100%',
      videoId: `${url}`,
      events: {
        'onStateChange': this.onPlayerStateChange
      }
    });
  }

  onPlayerStateChange(state) {
    try {
      const blockedElem = this.activeBtn.closest(".module__video-item").nextElementSibling;
      const playBtn = this.activeBtn.querySelector("svg").cloneNode(true);

      if (state.data === 0) {
        blockedElem.style.filter = "none";
        blockedElem.style.opacity = "1";
        blockedElem.querySelector(".play__circle").classList.remove("closed");
        blockedElem.querySelector(".play__circle").querySelector("svg").remove();
        blockedElem.querySelector(".play__circle").append(playBtn);
        blockedElem.querySelector(".play__circle").nextElementSibling.classList.remove("attention");
        blockedElem.querySelector(".play__circle").nextElementSibling.textContent = "Play video";
        blockedElem.setAttribute("data-disabled", "false");
      }
    } catch (e) {}
  }

  bindTriggers() {
    this.btns.forEach((btn, i) => {
      if (document.querySelector(".module__video-item")) {
        const blockedElem = btn.closest(".module__video-item").nextElementSibling;

        if (i % 2) {
          btn.closest(".module__video-item").setAttribute("data-disabled", "true");
        }
      }

      btn.addEventListener("click", e => {
        if (btn.closest(".showup__video") || btn.closest(".module__video-item").getAttribute("data-disabled") !== "true" || btn.closest(".showup__video")) {
          this.activeBtn = btn;
          this.block.style.display = "flex";

          if (document.querySelector("iframe#frame")) {
            if (this.path !== btn.getAttribute("data-url")) {
              this.path = btn.getAttribute("data-url");
              this.frame.loadVideoById({
                videoId: this.path
              }); // загружать другое видео
            }
          } else {
            this.path = btn.getAttribute("data-url");
            this.createPlayer(this.path);
          }
        }
      });
    });
  }

  bindClose() {
    this.close.addEventListener("click", e => {
      this.block.style.display = "none";
      this.frame.stopVideo();
    });
  }

  init() {
    if (this.btns.length > 0) {
      const tag = document.createElement('script');
      tag.src = "https://www.youtube.com/iframe_api";
      const firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
      this.bindTriggers();
      this.bindClose();
    }
  }

}

/***/ }),

/***/ "./src/js/modules/differences.js":
/*!***************************************!*\
  !*** ./src/js/modules/differences.js ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Differences)
/* harmony export */ });
class Differences {
  constructor(oldofficer, newofficer, items) {
    try {
      this.oldofficer = document.querySelector(oldofficer);
      this.newofficer = document.querySelector(newofficer);
      this.oldItems = this.oldofficer.querySelectorAll(items);
      this.newItems = this.newofficer.querySelectorAll(items);
      this.oldCounter = 0;
      this.newCounter = 0;
    } catch (e) {}
  }

  bindTriggers(container, items, counter) {
    container.querySelector(".plus").addEventListener("click", e => {
      if (counter !== items.length - 2) {
        items[counter].style.display = "flex";
        counter++;
      } else {
        items[counter].style.display = "flex";
        items[++counter].remove();
      }
    });
  }

  hideItems(items) {
    items.forEach((item, i, arr) => {
      if (i !== arr.length - 1) {
        item.style.display = "none";
      }
    });
    items.forEach((item, i, arr) => {
      if (i !== arr.length - 1) {
        item.style.display = "none";
      }
    });
  }

  init() {
    try {
      this.hideItems(this.newItems);
      this.hideItems(this.oldItems);
      this.bindTriggers(this.oldofficer, this.oldItems, this.oldCounter);
      this.bindTriggers(this.newofficer, this.newItems, this.newCounter);
    } catch (e) {}
  }

}

/***/ }),

/***/ "./src/js/modules/downloadFiles.js":
/*!*****************************************!*\
  !*** ./src/js/modules/downloadFiles.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ DownloadFiles)
/* harmony export */ });
class DownloadFiles {
  constructor(triggers) {
    this.btns = document.querySelectorAll(triggers);
    this.path = "./assets/img/mainbg.jpg";
  }

  dowloadItem(path) {
    const link = document.createElement("a");
    link.setAttribute("href", path);
    link.setAttribute("download", "Image");
    link.style.display = "none";
    document.body.append(link);
    link.click();
    link.remove();
  }

  bindTriggers() {
    this.btns.forEach(btn => {
      btn.addEventListener("click", e => {
        e.stopPropagation();
        this.dowloadItem(this.path);
      });
    });
  }

  init() {
    this.bindTriggers();
  }

}

/***/ }),

/***/ "./src/js/modules/forms.js":
/*!*********************************!*\
  !*** ./src/js/modules/forms.js ***!
  \*********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Forms)
/* harmony export */ });
class Forms {
  constructor(forms, url) {
    this.forms = document.querySelectorAll(forms);
    this.url = url;
    this.inputs = document.querySelectorAll("input");
    this.message = {
      loading: "Идет загрузка...",
      ok: "Cпасибо, скоро с Вами свяжется менеджер!",
      error: "Что то пошло не так..."
    };
  }

  async postData(url, data) {
    let res = await fetch(url, {
      method: "POST",
      body: data
    });
    return res.text();
  }

  clearInputs() {
    this.inputs.forEach(input => {
      input.value = "";
    });
  }

  checkEmailInputs(selector) {
    const emailInputs = document.querySelectorAll(selector);
    emailInputs.forEach(item => {
      item.addEventListener("keypress", e => {
        if (e.key.match(/[^a-z 0-9 @ \.]/ig)) {
          e.preventDefault();
        }
      });
    });
  }

  initMask() {
    let cursorPosition = (pos, elem) => {
      elem.focus();

      if (elem.setSelectionRange) {
        elem.setSelectionRange(pos, pos);
        elem.focus();
      } else if (elem.createTextRange) {
        let range = new Range();
        range.collapse(true);
        range.setStart(pos);
        range.setEnd(pos);
        range.select();
      }
    };

    function createMask(event) {
      let matrix = "+1 (___) ___-____",
          i = 0,
          diff = matrix.replace(/\D/g, ""),
          val = this.value.replace(/\D/g, "");

      if (diff.length > val.length) {
        val = diff;
      }

      this.value = matrix.replace(/./g, function (a) {
        if (/[_\d]/g.test(a) && i < val.length) {
          return val.charAt(i++);
        } else if (i >= val.length) {
          return "";
        } else {
          return a;
        }
      });

      if (event.type === "blur") {
        if (this.value.length <= 3) {
          this.value = "";
        }
      } else {
        cursorPosition(this.value.length, this);
      }
    }

    let inputs = document.querySelectorAll("[name='phone']");
    inputs.forEach(item => {
      item.addEventListener("input", createMask);
      item.addEventListener("focus", createMask);
      item.addEventListener("blur", createMask);
    });
  }

  init() {
    this.initMask();
    this.checkEmailInputs("[name='email']");
    this.forms.forEach(form => {
      form.addEventListener("submit", e => {
        e.preventDefault();
        let statusMessage = document.createElement("div");
        statusMessage.style.cssText = `color: grey;
				font-weight: 900;
				text-decoration: underline;
				`;
        form.parentNode.append(statusMessage);
        let formData = new FormData(form);
        statusMessage.textContent = this.message.loading;
        this.postData(this.url, formData).then(res => {
          console.log(res);
          statusMessage.textContent = this.message.ok;
        }).catch(err => {
          console.log(`Произошла ошибка: ${err.message}`);
          statusMessage.textContent = this.message.error;
        }).finally(() => {
          this.clearInputs();
          setTimeout(() => {
            statusMessage.remove();
          }, 6000);
        });
      });
    });
  }

}

/***/ }),

/***/ "./src/js/modules/showInfo.js":
/*!************************************!*\
  !*** ./src/js/modules/showInfo.js ***!
  \************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ ShowTips)
/* harmony export */ });
class ShowTips {
  constructor(trigger, tips) {
    this.btns = document.querySelectorAll(trigger);
  }

  showTip(tip) {
    tip.style.display = "block";
    this.tip.classList.remove('fadeOutDown');
    this.tip.classList.add("animated", 'fadeInUp');
  }

  hideTip(tip) {
    tip.style.display = "block";
    tip.classList.remove('fadeInUp');
    tip.classList.add("fadeOutDown");
    tip.style.display = "block";
    setTimeout(() => tip.style.display = " none", 1000);
  }

  bindTriggers() {
    this.btns.forEach(btn => {
      btn.addEventListener("click", e => {
        this.tip = btn.closest(".module__info-show").nextElementSibling;

        if (!btn.classList.contains("pressed")) {
          this.showTip(this.tip);
          btn.classList.add("pressed");
        } else {
          this.hideTip(this.tip);
          this.btn.classList.remove("pressed");
        }
      });
    });
  }

  init() {
    this.bindTriggers();
  }

}

/***/ }),

/***/ "./src/js/modules/slider/mainSlider.js":
/*!*********************************************!*\
  !*** ./src/js/modules/slider/mainSlider.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ MainSlider)
/* harmony export */ });
/* harmony import */ var _slider_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./slider.js */ "./src/js/modules/slider/slider.js");

class MainSlider extends _slider_js__WEBPACK_IMPORTED_MODULE_0__["default"] {
  constructor(btns, next, prev) {
    super(btns, next, prev);
  }

  checkIsBlock(n) {
    try {
      if (n === 3) {
        this.hanson.style.display = "none";
        this.hanson.classList.add("animated", "fadeInUp");
        setTimeout(() => this.hanson.style.display = "block", 3000);
      } else {
        this.hanson.classList.remove("animated", "fadeInUp");
      }
    } catch (e) {
      console.log(`Блок 'hanson' не найден на слайде ! Ошибка: ${e.message} `);
    }
  }

  showSlides(n) {
    if (n > this.slides.length) {
      this.slideIndex = 1;
    }

    if (n < 1) {
      this.slideIndex = this.slides.length;
    }

    this.checkIsBlock(n); // проверяем на каком слайде и стоит ли показать блок "Hanson"

    Array.from(this.slides).forEach(slide => {
      slide.style.display = "none";
    });
    this.slides[this.slideIndex - 1].style.display = "block";
  }

  plusSlides(n) {
    this.showSlides(this.slideIndex += n);
  }

  bindTriggers(buttons) {
    buttons.forEach(button => {
      button.addEventListener("click", e => {
        e.preventDefault();
        e.stopPropagation();

        if (button.closest(".prevmodule")) {
          this.plusSlides(-1);
        } else {
          this.plusSlides(1);
        }
      });
    });
  }

  render() {
    if (this.container) {
      this.hanson = document.querySelector(".hanson");
      this.btns.forEach(btn => {
        btn.addEventListener("click", e => {
          e.preventDefault();
          this.plusSlides(1);
        });
        btn.parentNode.previousElementSibling.addEventListener("click", e => {
          e.preventDefault();
          this.slideIndex = 1;
          this.showSlides(this.slideIndex);
        });
      });
      this.bindTriggers(this.next);
      this.bindTriggers(this.prev);
      this.showSlides(this.slideIndex);
    }
  }

}

/***/ }),

/***/ "./src/js/modules/slider/miniSlider.js":
/*!*********************************************!*\
  !*** ./src/js/modules/slider/miniSlider.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ MiniSlider)
/* harmony export */ });
/* harmony import */ var _slider_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./slider.js */ "./src/js/modules/slider/slider.js");

class MiniSlider extends _slider_js__WEBPACK_IMPORTED_MODULE_0__["default"] {
  constructor(container, next, prev, animate, classActive, autoplay) {
    super(container, next, prev, animate, classActive, autoplay);
  }

  decorizeSlides() {
    for (let i = 0; i < this.slides.length; i++) {
      try {
        this.slides[i].classList.remove(this.classActive);
      } catch {}

      ;

      if (this.animate) {
        this.slides[i].querySelector(".card__title").style.opacity = "0.4";
        this.slides[i].querySelector(".card__controls-arrow").style.opacity = "0";
      }
    }

    try {
      if (this.slides[1].tagName === "BUTTON" && this.slides[2].tagName === "BUTTON") {
        this.slides[0].classList.add(this.classActive);
        this.container.append(this.slides[1], this.slides[2]);
      } else {
        this.slides[0].classList.add(this.classActive);
      }
    } catch {}

    if (this.animate) {
      this.slides[0].querySelector(".card__title").style.opacity = "1";
      this.slides[0].querySelector(".card__controls-arrow").style.opacity = "1";
    }
  }

  showNextSlide() {
    this.container.append(Array.from(this.slides)[0]);
    this.decorizeSlides();
  }

  startAutoplay() {
    let interval = setInterval(() => this.showNextSlide(), 5000);
    this.slides[0].parentElement.addEventListener("mouseenter", () => clearInterval(interval));
  }

  bindTriggers() {
    this.next.forEach(item => {
      item.addEventListener("click", () => this.showNextSlide());
    });
    this.prev.forEach(item => {
      item.addEventListener("click", () => {
        if (Array.from(this.slides).at(-1).tagName == "BUTTON" && Array.from(this.slides).at(-2).tagName == "BUTTON") {
          this.container.prepend(Array.from(this.slides).at(-3));
        } else {
          this.container.prepend(Array.from(this.slides).at(-1));
        }

        this.decorizeSlides();
      });
    });
  }

  init() {
    try {
      this.container.style.cssText = `
				display: flex;
				flex-wrap: wrap;
				align-items: flex-start;
				overflow: hidden; 
			`;
      this.bindTriggers();
      this.decorizeSlides();

      if (this.autoplay) {
        this.startAutoplay();
        this.slides[0].parentElement.addEventListener("mouseleave", () => this.startAutoplay());
      }
    } catch (e) {}
  }

}

/***/ }),

/***/ "./src/js/modules/slider/slider.js":
/*!*****************************************!*\
  !*** ./src/js/modules/slider/slider.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Slider)
/* harmony export */ });
class Slider {
  constructor() {
    let {
      container = null,
      btns = null,
      next = null,
      prev = null,
      animate,
      classActive = "",
      autoplay
    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    this.container = document.querySelector(container);

    try {
      this.slides = this.container.children;
    } catch (e) {}

    this.btns = document.querySelectorAll(btns);
    this.next = document.querySelectorAll(next);
    this.prev = document.querySelectorAll(prev);
    this.classActive = classActive;
    this.animate = animate;
    this.autoplay = autoplay;
    this.slideIndex = 1;
  }

}

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _modules_slider_mainSlider_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/slider/mainSlider.js */ "./src/js/modules/slider/mainSlider.js");
/* harmony import */ var _modules_slider_miniSlider_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/slider/miniSlider.js */ "./src/js/modules/slider/miniSlider.js");
/* harmony import */ var _modules_VideoPlayer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/VideoPlayer.js */ "./src/js/modules/VideoPlayer.js");
/* harmony import */ var _modules_differences_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/differences.js */ "./src/js/modules/differences.js");
/* harmony import */ var _modules_forms_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/forms.js */ "./src/js/modules/forms.js");
/* harmony import */ var _modules_showInfo_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modules/showInfo.js */ "./src/js/modules/showInfo.js");
/* harmony import */ var _modules_downloadFiles_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./modules/downloadFiles.js */ "./src/js/modules/downloadFiles.js");







window.addEventListener("DOMContentLoaded", function (e) {
  const mainSlider = new _modules_slider_mainSlider_js__WEBPACK_IMPORTED_MODULE_0__["default"]({
    btns: ".next",
    container: ".page"
  });
  mainSlider.render();
  const modulePageSlider = new _modules_slider_mainSlider_js__WEBPACK_IMPORTED_MODULE_0__["default"]({
    container: ".moduleapp",
    btns: ".next",
    next: ".nextmodule",
    prev: ".prevmodule"
  });
  modulePageSlider.render();
  const miniSlider = new _modules_slider_miniSlider_js__WEBPACK_IMPORTED_MODULE_1__["default"]({
    container: ".showup__content-slider",
    next: ".showup__content .showup__next",
    prev: ".showup__content .showup__prev",
    classActive: "card-active",
    animate: true
  });
  miniSlider.init();
  const modulesSlider = new _modules_slider_miniSlider_js__WEBPACK_IMPORTED_MODULE_1__["default"]({
    container: ".modules__content-slider",
    next: ".modules__info-btns .slick-next",
    prev: ".modules__info-btns .slick-prev",
    classActive: "card-active",
    animate: true,
    autoplay: true
  });
  modulesSlider.init();
  const feedSlider = new _modules_slider_miniSlider_js__WEBPACK_IMPORTED_MODULE_1__["default"]({
    container: ".feed__slider",
    next: ".feed__slider .slick-next",
    prev: ".feed__slider .slick-prev",
    classActive: "feed__item-active"
  });
  feedSlider.init();
  new _modules_VideoPlayer_js__WEBPACK_IMPORTED_MODULE_2__["default"](".showup__video .play", ".overlay", ".close").init();
  new _modules_VideoPlayer_js__WEBPACK_IMPORTED_MODULE_2__["default"](".module__video-item .play", ".overlay", ".close").init();
  new _modules_differences_js__WEBPACK_IMPORTED_MODULE_3__["default"](".officerold", ".officernew", ".officer__card-item").init();
  new _modules_forms_js__WEBPACK_IMPORTED_MODULE_4__["default"]("form", "./assets/question.php").init();
  new _modules_showInfo_js__WEBPACK_IMPORTED_MODULE_5__["default"](".module__info-show .plus").init();
  new _modules_downloadFiles_js__WEBPACK_IMPORTED_MODULE_6__["default"](".module__info-book .download").init();
});
})();

/******/ })()
;
//# sourceMappingURL=app.min.js.map